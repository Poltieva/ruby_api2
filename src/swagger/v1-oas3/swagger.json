{
  "openapi": "3.0.3",
  "info": {
    "title": "Users",
    "description": "API for Users Management",
    "version": "v1-oas3"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Everything about the user"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get all users",
        "description": "Returns a json with all users (optionally sorted and ordered, default - sorted by salary descending)",
        "operationId": "getUsers",
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "description": "sort method (by id, first name, last name, salary)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "fname",
                "lname",
                "ysalary"
              ]
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "order method (ascending, descending)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Add user",
        "operationId": "addUser",
        "requestBody": {
          "description": "User object to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User_without_id"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          },
          "409": {
            "description": "ID already exists"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Find user by ID",
        "description": "Returns a single user",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "description": "User to be deleted",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id to be deleted",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "404": {
            "description": "User not found"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Update user",
        "operationId": "patchUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID to be updated",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "User object to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "required": [
          "fname",
          "id",
          "lanme",
          "ysalary"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "fname": {
            "type": "string"
          },
          "lanme": {
            "type": "string"
          },
          "ysalary": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "User_without_id": {
        "required": [
          "fname",
          "lanme",
          "ysalary"
        ],
        "type": "object",
        "properties": {
          "fname": {
            "type": "string"
          },
          "lanme": {
            "type": "string"
          },
          "ysalary": {
            "type": "integer"
          }
        }
      },
      "body": {
        "required": [
          "user"
        ],
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User_without_id"
          }
        }
      }
    }
  }
}